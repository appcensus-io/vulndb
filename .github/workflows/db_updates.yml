name: DB Updates 

on:
  workflow_dispatch:
  schedule:
    - cron: 0 8 * * * 

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      actions: write
    env:
      GH_TOKEN: ${{ github.token }}
      NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry version "$(poetry version -s).$PATCH_NUMBER"
        poetry install -v
      env:
        PATCH_NUMBER: ${{ github.run_number }}
    - name: Build
      run: |
        poetry build
    - name: Lint
      run: |
        poetry run poe lint
    - name: Test
      run: |
        poetry run poe unit_test
    - name: Restore database
      id: restore-database 
      uses: actions/cache/restore@v4
      with:
        key: ${{ steps.extract_branch.outputs.branch }}.${{ github.sha }}.db
        restore-keys: |
          ${{ steps.extract_branch.outputs.branch }}.
        path: |
          ~/.vulndb/vuln.db
    - name: Build database
      if: steps.restore-database.outputs.cache-hit
      run: |
        poetry run vulndb nvd ingest
        poetry run vulndb osv ingest
        poetry run poe data_validation_test
    - name: Delete expired cache
      id: delete-previous
      if: ${{ steps.restore-database.outputs.cache-hit == 'true' }}
      run: |
        gh cache delete ${{ steps.restore-database.outputs.cache-primary-key }}
    - name: Save Updated Database to Cache
      id: cache-database-if-valid
      uses: actions/cache/save@v4
      with:
        key: ${{ steps.extract_branch.outputs.branch }}.${{ github.sha }}.db
        path: |
          ~/.vulndb/vuln.db