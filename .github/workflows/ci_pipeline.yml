name: CI Pipeline

on:
  workflow_dispatch:
  schedule:
    - cron: 0 8 * * * 

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      actions: write
    env:
      GH_TOKEN: ${{ github.token }}
      NVD_API_KEY: ${{secrets.NVD_API_KEY}}
    outputs:
      semver: ${{ steps.install-current-version.outputs.version}}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch
    - name: Install dependencies
      id: install-current-version
      run: |
        python -m pip install --upgrade pip
        pip install poetry~=1.8
        poetry version "$(poetry version -s).$PATCH_NUMBER" 
        poetry install -v
        echo "version=$(poetry version -s)" >> "$GITHUB_OUTPUT"
      env:
        PATCH_NUMBER: ${{ github.run_number }}
    - name: Build
      run: |
        poetry build
    - name: Lint
      run: |
        poetry run poe lint
    - name: Test
      run: |
        poetry run poe unit_test
    - name: Store build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/**
    - name: Restore database
      id: restore-database 
      uses: actions/cache/restore@v4
      with:
        key: ${{ steps.extract_branch.outputs.branch }}-${{ github.sha }}-${{ github.run_id }}.db
        restore-keys: |
          ${{ steps.extract_branch.outputs.branch }}-${{ github.sha }}
          ${{ steps.extract_branch.outputs.branch }}
          "main"
        path: |
          ~/.vulndb/vuln.db
    - name: Test Restored Database
      id: db-test
      if: ${{ hashFiles('~/.vulndb/vuln.db') != '' }}
      continue-on-error: true
      run: |
        poetry run poe data_validation_test
    - name: Create database
      if: ${{ hashFiles('~/.vulndb/vuln.db') == '' || steps.db-test.outcome != 'success' }}
      run: |
        rm -f ~/.vulndb/vuln.db
        poetry run vulndb admin create
    - name: Build or Update Database
      id: build-or-update-db
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        poetry run vulndb nvd ingest
        poetry run vulndb osv ingest
        poetry run poe data_validation_test
    - name: Save Database to Cache
      id: cache-database-if-valid
      uses: actions/cache/save@v4
      with:
        key: ${{ steps.extract_branch.outputs.branch }}-${{ github.sha }}-${{ github.run_id }}.db
        path: |
          ~/.vulndb/vuln.db
  release: 
    runs-on: ubuntu-22.04
    if: ${{ (github.event_name == 'workflow_dispatch') || (github.ref == 'refs/heads/main') }}
    permissions:
      contents: write
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch
    - name: Restore database
      id: restore-database 
      uses: actions/cache/restore@v4
      with:
        key: ${{ steps.extract_branch.outputs.branch }}-${{ github.sha }}-${{ github.run_id }}.db
        restore-keys: |
          ${{ steps.extract_branch.outputs.branch }}-${{ github.sha }}
          ${{ steps.extract_branch.outputs.branch }}
          "main"
        path: |
          ~/.vulndb/vuln.db
    - name: Compress db
      shell: bash
      run: bzip2 /home/runner/.vulndb/vuln.db
    - name: Restore build artifacts
      uses: actions/download-artifact@v4
    - name: Upload asset to Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          /home/runner/.vulndb/vuln.db.bz2
          /home/runner/work/vulndb/vulndb/dist/**
        name: ${{ needs.build.outputs.semver }}
        tag_name: ${{ needs.build.outputs.semver }} 
        make_latest: true
  update:
    runs-on: ubuntu-22.04
    if: ${{ (github.event_name == 'schedule') || (github.ref == 'refs/heads/main') }}
    permissions:
      contents: write
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch
    - name: Restore database
      id: restore-database 
      uses: actions/cache/restore@v4
      with:
        key: ${{ steps.extract_branch.outputs.branch }}-${{ github.sha }}-${{ github.run_id }}.db
        restore-keys: |
          ${{ steps.extract_branch.outputs.branch }}-${{ github.sha }}
          ${{ steps.extract_branch.outputs.branch }}
          "main"
        path: |
          ~/.vulndb/vuln.db
    - name: Compress db
      shell: bash
      run: bzip2 /home/runner/.vulndb/vuln.db
    - name: Update database in existing Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          /home/runner/.vulndb/vuln.db.bz2